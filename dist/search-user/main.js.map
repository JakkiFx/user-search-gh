{"version":3,"sources":["./src/app/shared/services/github.service.ts","./src/environments/environment.ts","./src/app/shared/components/card/card.component.ts","./src/app/shared/components/card/card.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/search/search.component.ts","./src/app/pages/search/search.component.html","./src/app/app.module.ts","./src/environments/environment.prod.ts","./src/app/shared/components/card-fake/card-fake.component.ts","./src/app/shared/components/card-fake/card-fake.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAIqB;;;AAKzD,MAAM,aAAa;IAGxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,WAAM,GAAG,6EAAW,CAAC,MAAM,CAAC;IAEW,CAAC;IAExC,UAAU,CAAC,OAAe;QACxB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,OAAO,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,CAAC,CAAC;IACtC,CAAC;;0EARU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAyD;;;;ICErD,sEACE;IAAA,yEACE;IAAA,yEACE;IAAA,uEAAM;IAAA,yEAAQ;IAAA,8DAAG;IAAA,4DAAS;IAAC,uDAAkB;IAAA,4DAAO;IACpD,uEACE;IAAA,yEAAQ;IAAA,iEAAM;IAAA,4DAAS;IACvB,wDACF;IAAA,4DAAO;IACT,4DAAM;IACN,qEACA;IAAA,0EACE;IAAA,qEAAG;IAAA,wDAAmB;IAAA,4DAAI;IAC1B,wEAA+B;IAAA,wDAAoB;IAAA,4DAAI;IACzD,4DAAM;IACN,wEAA6B;IAAA,wDAAkB;IAAA,4DAAI;IACnD,qEAAG;IAAA,0EAAQ;IAAA,+EAAS;IAAA,4DAAS;IAAC,wDAAsB;IAAA,4DAAI;IACxD,qEAAG;IAAA,0EAAQ;IAAA,mEAAO;IAAA,4DAAS;IAAC,wDAAuB;IAAA,4DAAI;IACvD,0EACE;IAAA,wEAAM;IAAA,wDAAkC;IAAA,4DAAO;IAAC,+DAChD;IAAA,wEAAM;IAAA,wDAAkC;IAAA,4DAAO;IACjD,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAnB2B,0DAAkB;IAAlB,8FAAkB;IAG3C,0DACF;IADE,uIACF;IAEG,0DAA+B;IAA/B,mKAA+B;IAE/B,0DAAmB;IAAnB,qFAAmB;IACS,0DAAoB;IAApB,sFAAoB;IAExB,0DAAkB;IAAlB,oFAAkB;IACjB,0DAAsB;IAAtB,kGAAsB;IACxB,0DAAuB;IAAvB,mGAAuB;IAE3C,0DAAkC;IAAlC,6GAAkC;IAClC,0DAAkC;IAAlC,6GAAkC;;;IApBhD,sEACE;IAAA,iHACE;IAsBJ,4DAAM;;;IAvBC,0DAAsB;IAAtB,uFAAsB;;ADKxB,MAAM,aAAa;IAGxB;QAFS,aAAQ,GAAG,EAAE,CAAC;IAER,CAAC;IAEhB,QAAQ,KAAU,CAAC;;0EALR,aAAa;6FAAb,aAAa;QCP1B,yEACE;QAAA,yGACE;QAwBJ,4DAAM;;QAzBC,0DAAgB;QAAhB,8EAAgB;;6FDMV,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;sCAEU,QAAQ;kBAAhB,mDAAK;;;;;;;;;;;;;;AERR;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;;6FDOZ,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICiB5C,0EAA+C;IAAA,uDAAkB;IAAA,4DAAM;;;IAAxB,0DAAkB;IAAlB,oFAAkB;;;IAMrE,sEACE;IAAA,0EAA2C;IAC7C,4DAAM;;;IADM,0DAAqB;IAArB,qFAAqB;;;IAI/B,2EAA+B;;ADnB5B,MAAM,eAAe;IAK1B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAJhD,aAAQ,GAAG,EAAE,CAAC;QACd,iBAAY,GAAG,EAAE,CAAC;IAGiC,CAAC;IAEpD,QAAQ,KAAI,CAAC;IAEb,cAAc;QACZ,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACpD,CAAC,YAAsB,EAAE,EAAE;gBACzB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC;gBAC5B,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;gBAC7B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACzB,CAAC,EACD,CAAC,aAAa,EAAE,EAAE;gBAChB,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC,OAAO,KAAK,WAAW,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3F,CAAC,CACF,CAAC;SACH;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC;SACzC;IACH,CAAC;;8EAxBU,eAAe;+FAAf,eAAe;QCT5B,yEACE;QAAA,yEACE;QAAA,wEAA0B;QAAA,6EAAkB;QAAA,4DAAK;QACjD,0EACE;QAD4C,uIAAU,oBAAgB,IAAC;QACvE,2EAOA;QAFE,qLAAsB;QALxB,4DAOA;QAAA,sEAMA;QAAA,2GAA+C;QACjD,4DAAO;QACT,4DAAM;QAEN,oEAAgC;QAEhC,2GACE;QAGF,yMACE;QAEJ,4DAAM;;;QArBE,0DAAsB;QAAtB,iFAAsB;QAQE,0DAAoB;QAApB,kFAAoB;QAM7C,0DAA+B;QAA/B,8EAA+B;;6FDdzB,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACW;AACA;AAET;AACmB;AACM;AACc;;AAkB/E,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;SACjB;mIAIU,SAAS,mBAdlB,2DAAY;QACZ,8EAAe;QACf,oFAAa;QACb,kGAAiB,aAGjB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,qEAAgB;6FAKP,SAAS;cAhBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,8EAAe;oBACf,oFAAa;oBACb,kGAAiB;iBAClB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,qEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC1BD;AAAA;AAAO,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,MAAM,EAAE,8BAA8B;CACvC,CAAC;;;;;;;;;;;;;ACHF;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,+DAAO;QACP,+DAAO;QACT,4DAAM;QACN,oEAAuB;QACvB,yEACE;QAAA,+DAAO;QACP,+DAAO;QACT,4DAAM;QACN,kEAAsC;QACtC,mEAAoB;QACpB,mEAAoB;QACpB,0EACE;QAAA,gEAAO;QACP,gEAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;;6FDZO,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,EAChD,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC1D,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UserData } from '../interfaces/GitHubUser';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubService {\n  urlAPI = environment.urlApi;\n\n  constructor(private http: HttpClient) {}\n\n  searchUser(loginID: string): Observable<UserData> {\n    const url = `${this.urlAPI}/${loginID}`;\n    return this.http.get<UserData>(url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent implements OnInit {\n  @Input() userdata = '';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"card\">\n  <div *ngIf=\"userdata\">\n    <div *ngIf=\"userdata.login\">\n      <div class=\"card__perfil\">\n        <div class=\"card__perfil__id\">\n          <span><strong>ID:</strong> {{ userdata.id }} </span>\n          <span>\n            <strong>REPOS:</strong>\n            {{ userdata.public_repos + userdata.public_gists }}\n          </span>\n        </div>\n        <img src=\"{{ userdata.avatar_url }}\" />\n        <div class=\"card__perfil__name\">\n          <p>{{ userdata.name }}</p>\n          <p class=\"card__perfil__login\">{{ userdata.login }}</p>\n        </div>\n        <p class=\"card__perfil__bio\">{{ userdata.bio }}</p>\n        <p><strong>Formação:</strong> {{ userdata.company }}</p>\n        <p><strong>Origem:</strong> {{ userdata.location }}</p>\n        <div class=\"card__perfil__follow\">\n          <span>{{ userdata.followers }} followers</span> |\n          <span>{{ userdata.following }} following</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","<app-search></app-search>","import { Component, OnInit } from '@angular/core';\nimport { UserData } from 'src/app/shared/interfaces/GitHubUser';\nimport { GithubService } from 'src/app/shared/services/github.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n})\nexport class SearchComponent implements OnInit {\n  nickname = '';\n  errorMessage = '';\n  userdata: UserData;\n\n  constructor(private gitHubService: GithubService) {}\n\n  ngOnInit() {}\n\n  serachNickname(): void {\n    if (this.nickname) {\n      this.gitHubService.searchUser(this.nickname).subscribe(\n        (dataResponse: UserData) => {\n          console.log(dataResponse.id)\n          this.userdata = dataResponse;\n          this.errorMessage = '';\n        },\n        (errorResponse) => {\n          this.errorMessage = errorResponse.error.message === 'Not Found' ? \"Não encontrado!\" : '';\n        }\n      );\n    } else {\n      this.errorMessage = 'Digite o nickname';\n    }\n  }\n}\n","<div class=\"search\">\n  <div class=\"search__container\">\n    <h1 class=\"search__title\">Procure seu perfil</h1>\n    <form autocomplete=\"off\" class=\"search__form\" (submit)=\"serachNickname()\">\n      <input\n        type=\"text\"\n        class=\"search__form__input\"\n        placeholder=\"Username\"\n        name=\"nickname\"\n        [(ngModel)]=\"nickname\"\n        />\n      <input\n        type=\"submit\"\n        class=\"search__form__button\"\n        value=\"Procurar\"\n      />\n\n      <div class=\"errorMessage\" *ngIf=\"errorMessage\">{{ errorMessage }}</div>\n    </form>\n  </div>\n\n  <div class=\"search__line\"></div>\n  \n  <div *ngIf=\"nickname; else noSearch\">\n    <app-card [userdata]=\"userdata\"></app-card>\n  </div>\n  \n  <ng-template #noSearch>\n    <app-card-fake></app-card-fake>\n  </ng-template>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { SearchComponent } from './pages/search/search.component';\nimport { CardComponent } from './shared/components/card/card.component';\nimport { CardFakeComponent } from './shared/components/card-fake/card-fake.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent,\n    CardComponent,\n    CardFakeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export const environment = {\n  production: true,\n  urlApi: \"https://api.github.com/users\"\n};\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card-fake',\n  templateUrl: './card-fake.component.html',\n  styleUrls: ['./card-fake.component.scss']\n})\nexport class CardFakeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card-fake\">\n  <div class=\"card-fake__perfil\">\n    <div class=\"card-fake__perfil__id\">\n      <p></p>\n      <p></p>\n    </div>\n    <div class=\"img\"></div>\n    <div class=\"card-fake__perfil__name\">\n      <p></p>\n      <p></p>\n    </div>\n    <p class=\"card-fake__perfil__bio\"></p>\n    <p class=\"line\"></p>\n    <p class=\"line\"></p>\n    <div class=\"card-fake__perfil__follow\">\n      <p></p>\n      <p></p>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}